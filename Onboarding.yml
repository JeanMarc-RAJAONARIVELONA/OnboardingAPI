openapi: "3.0.3"
info:
  title: On Boarding API
  description: STD22043
  contact:
    email: hei.jean.3@gmail.com
  version: "1.2"
servers:
  - url: https://STD22043.com/api/v2
paths:
  /students:
    get:
      description: Get all students
      tags:
        - Students
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Student"
    post:
      description: Create a new student
      tags:
        - Students
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Student"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
    put:
      description: Update a student
      tags:
        - Students
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Student"
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
    delete:
      description: Delete a student
      tags:
        - Students
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Deleted
  /teachers:
    get:
      description: Get all teachers
      tags:
        - teachers
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Teacher"
    post:
      description: Create a new teacher
      tags:
        - teachers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Teacher"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Teacher"

components:
  schemas:
    Student:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Jean Marc
        email:
          type: string
          example: hei.jean.3@gmail.com
        birthdate:
          type: string
          format: date
          example: 2005-02-15
    Teacher:
      type: object
      properties:
        name:
          type: string
          example: RAMAROZAKA
        firstname:
          type: string
          example: Toky
        courses:
          type: array
          items:
            $ref: "#/components/schemas/Course"

    Course:
      type: object
      properties:
        course_name:
          type: string
          example: Algorithme
        course_code:
          type: string
          example: Prog1
        duration:
          type: string
          example: 4h
